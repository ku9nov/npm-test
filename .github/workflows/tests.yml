name: Tests

on:
  pull_request:
    branches:
      - main
    paths:
      - '*.md'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Run npm install
        run: npm ci
        
      - name: Run Tests
        run: npm test
        continue-on-error: false

      - name: Extract version from PR title
        id: extract-version
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          version=$(echo "$pr_title" | grep -oP '\d+\.\d+\.\d+')
          if [ -z "$version" ]; then
            echo "❌ Version not found in PR title: $pr_title"
            exit 1
          fi
          echo "version=$version" >> $GITHUB_ENV
          echo "✅ Extracted version: $version"

      - name: Get version from package.json
        id: get-package-version
        run: |
          package_version=$(grep -oP '"version": "\K[0-9]+\.[0-9]+\.[0-9]+' package.json)
          echo "package_version=$package_version" >> $GITHUB_ENV
          echo "📦 Package.json version: $package_version"
  
      - name: Get version from package-lock.json
        id: get-package-lock-version
        run: |
          package_lock_version=$(grep -oP '"version": "\K[0-9]+\.[0-9]+\.[0-9]+' package-lock.json | head -n 1)
          echo "package_lock_version=$package_lock_version" >> $GITHUB_ENV
          echo "🔒 Package-lock.json version: $package_lock_version"
    
      - name: Compare Versions
        run: |
          echo "🔍 Comparing versions..."
          echo "PR Title version: $version"
          echo "Package.json version: $package_version"
          echo "Package-lock.json version: $package_lock_version"
          
          if [ "$version" != "$package_version" ]; then
            echo "❌ Version mismatch: PR title version ($version) does not match package.json version ($package_version)"
            exit 1
          elif [ "$version" != "$package_lock_version" ]; then
            echo "❌ Version mismatch: PR title version ($version) does not match package-lock.json version ($package_lock_version)"
            exit 1
          else
            echo "✅ All versions match: $version"
          fi